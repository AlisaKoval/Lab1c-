#include<cstdio>
#include<iostream>
#include<ctime>
using namespace std;

//Криворучко Ксения, ИВТ-2, 4 вариант

/*
Написать программу обработки одномерного массива с n элементами, в соответствии с
вариантом (приложение А). Необходимые действия должны производиться в
функции processArray(), возвращающей определенное значение и формирующей
еще один (выходной) массив данных (см. свой вариант). Память под массивы
выделять статически (объявлять массивы локально в функции main) и для доступа к
элементам использовать индексы. Ввод-вывод данных организовать средствами cstdio*/


/*

Объявить массив из n=20 целых чисел, проинициализировать нулями. Функция
process_array() должна заполнить массив случайными числами от 1 до 10, вычислить
и вернуть наиболее часто встречающееся значение в массиве (если таких несколько,
вернуть наименьшее) и сформировать выходной массив из всех элементов, которые
встречаются как минимум 2 раза во входном массиве. Вывести на экран массивы.

Вход: [ 2 10 3 5 8 7 3 3 7 10 5 2 4 5 4 3 2 10 5 1 ]
Выход: [ 2 3 4 5 7 10 ] MostFrequentElement = 3
*/

// прототип функции process_array
int process_array(int arr[], size_t n, int repArr[]);
size_t k = 0;

//прототип функции для вывода массива на экран
void printArray(int arr[], size_t n);

int main()
{
	setlocale(LC_ALL, "Rus");
	const size_t n = 20;       //размер массива равен 20
	int arr[n]{ 0 };           //инициализация массива нулями
	int repArr[n]{ 0 };        //выходной массив пока что тоже заполняем нулями

	//инициализация генератора случайных чисел
	srand(time(NULL));

	//вычисление найболее повторяющегося значения и формирование выходного массива 
	int  frequently = process_array(arr, n, repArr);

	//вывод массивов на экран
	printArray(arr, n);
	printArray(repArr, k);

	//вывод на экран повторяющегося значения
	printf("Найболее часто встречающееся значение в массиве(найменьшее) = %d\n", frequently);

}

int process_array(int arr[], size_t n, int repArr[])
{
	//заполнение массива случайными числами от 1 до 10
	for (size_t i = 0; i < n; i++)
	{
		arr[i] = (int)(rand() % 10) + 1;
	}

	//заполнение выходного массива значениями, которые хотя бы 2 раза встречаются в исходном массиве
	int frequently;     //найболее часто повторяющееся значение  
	int max = 0;        // максимальное количество его повторений

	for (size_t i = 0; i < n; i++)
	{
		int count = 1;    //по умолчанию число повторений элемента 1
		for (size_t j = i + 1; j < n; j++)
		{
			//проверяем, повторяется ли элемент и запоминаем, сколько раз
			if (arr[i] == arr[j])
				count++;
		}
		//если выполняется условие элементов выходного массива(повторяется элемент хотя бы 2 раза),то...
		if (count == 2)
		{
			repArr[k] = arr[i];       //..заносим этот элемент во второй массив
			k++;
		}
		// если повторяющихся элементов несколько, то..
		if (count == max)
		{
			if (frequently > arr[i])        // ..выбираем меньшее
				frequently = arr[i];

		}
		// если элемент повторяется более раз, чем максимальное количесвто повторений, то..
		if (count > max)
		{
			max = count;            //..обновляем максимальное количество повторений и сам элемент
			frequently = arr[i];
		}
	}
	return frequently;
}

//функция для вывода массива на экран
void printArray(int arr[], size_t n)
{
	for (size_t i = 0; i < n; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
}

